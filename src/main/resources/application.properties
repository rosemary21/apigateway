

#This section section is used to specify the name of the service and is this name that will be registered in
#the discovery server
spring.application.name=gateway-service


#This section of the application properties the apigateway check for the name customer-service in the discovery server

spring.cloud.gateway.routes[0].id=customer-service

#This section is used to for load balancing the word lb which is used for scaling and optimization of request and traffic to
#ensure the request are evenly distributed
spring.cloud.gateway.routes[0].uri=lb://customer-service

#This section of the application properties  search for the url that begins with the word apigateway , this is necessary when we have multiple
#service that it need to routes to be able to identify what it for and reroute it to the appropriate service

spring.cloud.gateway.routes[0].predicates[0]=Path=/apigateway/**

#This section of the application properties stripprefix=1 what it does it remove the part in this case apigateway
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1



spring.main.web-application-type=reactive

#This section of application properties is a configuration done to remove any cross origin that will prevent
#the apigateway from reaching the service specified
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOriginPatterns=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*


#This section of the application properties registers the apigateway to the discovery server eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

server.port=8088

